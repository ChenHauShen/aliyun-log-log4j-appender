log4j.rootLogger=DEBUG,loghubAppender1, loghubAppender2, STDOUT

#loghubAppender1
log4j.appender.loghubAppender1=com.aliyun.openservices.log.log4j.LoghubAppender
#日志服务的project名，必选参数
log4j.appender.loghubAppender1.projectName=test-proj
#日志服务的logstore名，必选参数
log4j.appender.loghubAppender1.logstore=store1
#日志服务的http地址，必选参数
log4j.appender.loghubAppender1.endpoint=
#用户身份标识，必选参数
log4j.appender.loghubAppender1.accessKeyId=
log4j.appender.loghubAppender1.accessKey=
#被缓存起来的日志的发送超时时间，如果缓存超时，则会被立即发送，单位是毫秒，默认值为3000，最小值为10，可选参数
log4j.appender.loghubAppender1.packageTimeoutInMS=3000
#每个缓存的日志包中包含日志数量的最大值，不能超过 4096，可选参数
log4j.appender.loghubAppender1.logsCountPerPackage=4096
#每个缓存的日志包的大小的上限，不能超过 5MB，单位是字节，可选参数
log4j.appender.loghubAppender1.logsBytesPerPackage=5242880
#Appender 实例可以使用的内存的上限，单位是字节，默认是 100MB，可选参数
log4j.appender.loghubAppender1.memPoolSizeInByte=1048576000
#指定I/O线程池最大线程数量，主要用于发送数据到日志服务，默认是8，可选参数
log4j.appender.loghubAppender1.maxIOThreadSizeInPool=8
#指定发送失败时重试的次数，如果超过该值，会把失败信息通过log4j的LogLog进行输出，默认是3，可选参数
log4j.appender.loghubAppender1.retryTimes=3
#指定日志主题
log4j.appender.loghubAppender1.topic = topic1
#输出到日志服务的时间格式，使用 Java 中 SimpleDateFormat 格式化时间，默认是 ISO8601，可选参数
log4j.appender.loghubAppender1.timeFormat=yyyy-MM-dd'T'HH:mmZ
log4j.appender.loghubAppender1.timeZone=UTC
#输出WARN级别及以上的消息
log4j.appender.loghubAppender1.Threshold=WARN

#loghubAppender2
log4j.appender.loghubAppender2=com.aliyun.openservices.log.log4j.LoghubAppender
#日志服务的project名，必选参数
log4j.appender.loghubAppender2.projectName=test-proj
#日志服务的logstore名，必选参数
log4j.appender.loghubAppender2.logstore=store2
#日志服务的http地址，必选参数
log4j.appender.loghubAppender2.endpoint=
#用户身份标识，必选参数
log4j.appender.loghubAppender2.accessKeyId=
log4j.appender.loghubAppender2.accessKey=
#被缓存起来的日志的发送超时时间，如果缓存超时，则会被立即发送，单位是毫秒，默认值为3000，最小值为10，可选参数
log4j.appender.loghubAppender2.packageTimeoutInMS=3000
#每个缓存的日志包中包含日志数量的最大值，不能超过 4096，可选参数
log4j.appender.loghubAppender2.logsCountPerPackage=4096
#每个缓存的日志包的大小的上限，不能超过 5MB，单位是字节，可选参数
log4j.appender.loghubAppender2.logsBytesPerPackage=5242880
#Appender 实例可以使用的内存的上限，单位是字节，默认是 100MB，可选参数
log4j.appender.loghubAppender2.memPoolSizeInByte=1048576000
#指定I/O线程池最大线程数量，主要用于发送数据到日志服务，默认是8，可选参数
log4j.appender.loghubAppender2.maxIOThreadSizeInPool=8
#指定发送失败时重试的次数，如果超过该值，会把失败信息记录到log4j的StatusLogger里，默认是3，可选参数
log4j.appender.loghubAppender2.retryTimes=3
#指定日志主题
log4j.appender.loghubAppender2.topic = topic2
#输出到日志服务的时间格式，使用 Java 中 SimpleDateFormat 格式化时间，默认是 ISO8601，可选参数
log4j.appender.loghubAppender2.timeFormat=yyyy-MM-dd'T'HH:mmZ
log4j.appender.loghubAppender2.timeZone=UTC
#输出INFO级别及以上的消息
log4j.appender.loghubAppender2.Threshold=INFO

#STDOUT
log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
log4j.appender.STDOUT.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n